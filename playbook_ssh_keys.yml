---
- hosts: ~
  remote_user: ~
  gather_facts: no
  become: true
  
  vars:
    ssh_users:
      1:
        name: root 
        ssh_keys: ./public_keys/id_rsa.pub
      2:
        name: matilde
        ssh_keys: ./public_keys/mathilde.pub
    
  tasks:
    - name: Create .ssh directory for users
      file:
        path: "/{{ item.value.name }}/.ssh"
        state: directory
        mode: '0700'
      when: item.value.name != 'root'
      loop: "{{ ssh_users | dict2items }}"

    - name: Check .ssh directory permissions for users
      stat:
        path: "/{{ item.value.name }}/.ssh"
      register: ssh_dir_status
      when: item.value.name != 'root'
      loop: "{{ ssh_users | dict2items }}"

    - name: Set correct .ssh directory permissions for users
      file:
        path: /{{ item.value.name }}/.ssh
        state: directory
        owner: "{{ item.value.name }}"
        group: users
        mode: '0700'
      when: ssh_dir_status.stat.exists and ssh_dir_status.stat.mode != '0700' and item.value.name != 'root'
      loop: "{{ ssh_users | dict2items }}"

    - name: Create .ssh directory for root
      file:
        path: /root/.ssh
        state: directory
        mode: '0700'
      when: item.value.name == 'root'
      loop: "{{ ssh_users | dict2items }}"

    - name: Check .ssh directory permissions for root
      stat:
        path: /root/.ssh
      register: ssh_dir_status
      when: item.value.name == 'root'
      loop: "{{ ssh_users | dict2items }}"

    - name: Set correct .ssh directory permissions for root
      file:
        path: /root/.ssh
        state: directory
        owner: root
        group: root
        mode: '0700'
      when: ssh_dir_status.stat.exists and ssh_dir_status.stat.mode != '0700'
      loop: "{{ ssh_users | dict2items }}"

    - name: create authorized_keys file for root
      file:
        path: /root/.ssh/authorized_keys
        state: touch
        owner: root
        group: root
        mode: 0600
      when: item.value.name == 'root'
      loop: "{{ ssh_users | dict2items }}"     
       
    - name: create authorized_keys file for users
      file:
        path: "/home/{{ item.value.name }}/.ssh/authorized_keys"
        state: touch
        owner: "{{ item.value.name }}"
        group: "{{ item.value.name }}"
        mode: 0600
      when: item.value.name != 'root'     
      loop: "{{ ssh_users | dict2items }}"   
      
    - name: Upload SSH public key to users authorized keys file
      authorized_key:
        user: "{{ item.value.name }}"
        key: "{{ lookup('file', item.value.ssh_keys) }}"
      loop: "{{ ssh_users | dict2items }}"
